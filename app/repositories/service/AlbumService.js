// services/AlbumService.js
/**
 * @class AlbumService
 * @description Proporciona la l칩gica de negocio relacionada con los 치lbumes.
 * Depende de una implementaci칩n de IBaseRepository para el acceso a datos,
 * mostrando la Inyecci칩n de Dependencias.
 */
class AlbumService {
    /**
     * @param {IBaseRepository} albumRepository Una instancia de un repositorio de 치lbumes.
     */
    constructor(albumRepository) {
        this.albumRepository = albumRepository;
    }

    /**
     * Obtiene todos los 치lbumes.
     * @returns {Promise<Array<Object>>} Promesa que resuelve con la lista de 치lbumes.
     */
    async getAlbums() {
        console.log('游녤 Servicio de 츼lbumes: Solicitando todos los 치lbumes.');
        return this.albumRepository.getAll();
    }

    /**
     * Obtiene un 치lbum por su ID.
     * @param {number} id El ID del 치lbum.
     * @returns {Promise<Object|null>} Promesa que resuelve con el 치lbum o null.
     */
    async getAlbumById(id) {
        console.log(`游녤 Servicio de 츼lbumes: Solicitando 치lbum con ID: ${id}.`);
        return this.albumRepository.getById(id);
    }

    /**
     * Crea un nuevo 치lbum.
     * @param {Object} albumData Los datos del 치lbum a crear.
     * @returns {Promise<Object>} Promesa que resuelve con el 치lbum creado.
     */
    async createAlbum(albumData) {
        console.log('游녤 Servicio de 츼lbumes: Creando nuevo 치lbum.');
        return this.albumRepository.create(albumData);
    }

    /**
     * Actualiza un 치lbum existente.
     * @param {number} id El ID del 치lbum a actualizar.
     * @param {Object} albumData Los datos actualizados del 치lbum.
     * @returns {Promise<Object|null>} Promesa que resuelve con el 치lbum actualizado o null.
     */
    async updateAlbum(id, albumData) {
        console.log(`游녤 Servicio de 츼lbumes: Actualizando 치lbum con ID: ${id}.`);
        return this.albumRepository.update(id, albumData);
    }

    /**
     * Elimina un 치lbum.
     * @param {number} id El ID del 치lbum a eliminar.
     * @returns {Promise<boolean>} Promesa que resuelve con true si se elimin칩, false en caso contrario.
     */
    async deleteAlbum(id) {
        console.log(`游녤 Servicio de 츼lbumes: Eliminando 치lbum con ID: ${id}.`);
        return this.albumRepository.delete(id);
    }
}

module.exports = AlbumService;